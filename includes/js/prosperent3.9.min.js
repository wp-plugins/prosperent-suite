(function() {
    var e = 950 > jQuery(window).height() ? 600 : 750;
    tinymce.PluginManager.add("prosperent", function(a, d) {
    	function html( cls, data ,con, selected) {    		
    		var data = window.encodeURIComponent( data );
    		content = window.encodeURIComponent( con );

    		if (data == 'linker')
    		{	
    			return '<span class="' + cls + '" title="'+data+((con != "undefined" && "undefined" != typeof con) ? ' '+con.replace(/"/g, ''): '')+'" style="display:inline-block;text-decoration:underline;color:red;" data-sh-attr="' + data + '" data-sh-content="'+ content +'" data-mce-resize="false" data-mce-placeholder="1">'+ selected +'</span>'
    		}
    		else
    		{
    			var placeholder = location.protocol + '//' + location.hostname + "/wp-content/plugins/prosperent-suite/includes/img/" + ("compare" == data ? 'prosperInsert' : data) + "Placeholder.png";
    			return '<img class="' + cls + '" title="'+data+((con !== "undefined" && "undefined" != typeof con) ? ' '+con.replace(/"/g, '') :'')+'" alt="'+data+(con !== "undefined" && "undefined" != typeof con ? ' '+con.replace(/"/g, '') :'')+'" src="' + placeholder + '" data-sh-attr="' + data + '" data-sh-content="'+ ((content !== "undefined" && "undefined" != typeof content && null !== content) ? content : '') +'" data-mce-resize="false" data-mce-placeholder="1" />';
    		}
    	}

    	function replaceShortcodes( content ) {
    		return content.replace( /\[(linker|prosper_store|prosper_search|prosperInsert|contentInsert|compare) ?([^\]]*)?\](.+)?\[\/(linker|prosper_store|prosper_search|prosperInsert|contentInsert|compare)\]/g, function( all,attr,con,selected) {
    			return html( 'prosperShort', attr , con, selected);
    		});
    	}
        
        function h(a) {
        	return a.replace( /(<(img|span) class="prosperShort" [^>]+>(<img[^<]+|[^<\/]+)?(<\/span>)?)/g, function( everything, match, tag, selected, endTag ) {
    			var data = g( match, 'data-sh-attr' );
    			var con = g( match, 'data-sh-content' );

    			if ( data ) {
    				return '[' + data + ' ' +  con + ']' + selected + '[/'+data+']';
    			}
    			return match;
    		});
        }

        function g(a, b) {
            return (b = (new RegExp(b + '="([^"]+)"', "g")).exec(a)) ? window.decodeURIComponent(b[1]) : ""
        }
        a.addCommand("linker", function(c, b) {
            a.windowManager.open({
                file: d + "/../views/prosperlinker/autoLink.php",
                width: 950,
                height: e
            });
            a.windowManager.setParams(b)
        });
        a.addCommand("prosperInsert", function(c, b) {
            a.windowManager.open({
                file: d + "/../views/prosperinsert/productInsert.php",
                width: 950,
                height: e
            });
            a.windowManager.setParams(b)
        });
        a.addCommand("contentInsert", function(c, b) {
            a.windowManager.open({
                file: d + "/../views/prosperinsert/contentInsert.php",
                width: 950,
                height: e
            });
            a.windowManager.setParams(b)
        });
        a.addCommand("prosper_search", function(c, b) {
            a.windowManager.open({
                file: d + "/../views/prospersearch/prosperSearch.php",
                width: 525,
                height: 225
            });
            a.windowManager.setParams(b)
        });
        a.addButton("prosperent", {
            title: "Prosperent ShortCodes",
            type: "splitbutton",
            onclick: function() {},
            menu: [{
                text: "Link Phrase/Image to a Product",
                onclick: function() {
                    a.execCommand("linker", "", "")
                }
            }, {
                text: "Insert Products",
                hidden: !prosperSuiteVars.prosperInsert,
                onclick: function() {
                    a.execCommand("prosperInsert", "", "")
                }
            }, {
                text: "Edit Automated ProsperInsert Products",
                hidden: (!prosperSuiteVars.prosperInsert || (!prosperSuiteVars.contentInsert) || (prosperSuiteVars.contentInsert != 'all' && prosperSuiteVars.currentScreen != prosperSuiteVars.contentInsert)),
                onclick: function() {
                    a.execCommand("contentInsert", "", "")
                }
            }, {
                text: "Insert a Product Search Bar",
                onclick: function() {
                    a.execCommand("prosper_search", "", "")
                }
            }, {
                text: "Insert a Shop",
                hidden: "post" == prosperSuiteVars.currentScreen,
                onclick: function() {
                    a.execCommand("mceInsertContent", !1, "[prosper_store][/prosper_store]")
                }
            }]
        });
        a.on("DblClick", function(c) {
            c.target.className.indexOf("prosperShort");
            if (-1 < c.target.className.indexOf("prosperShort")) {
                var b = c.target.attributes["data-sh-attr"].value,
                    b = window.decodeURIComponent(b);
                c = c.target.attributes["data-sh-content"].value;
                c = window.decodeURIComponent(c);
                a.execCommand(b,
                    "", c)
            }
        });
        a.on("GetContent", function(a) {
        	if ("undefined" != a.content && "undefined" != typeof a.content && null !== a.content)
        	{
        		a.content = h(a.content);
        	}
        });
        a.on("BeforeSetcontent", function(a) {
        	if ("undefined" != typeof a.content && null !== a.content)
        	{
        		a.content = replaceShortcodes(a.content);
        	}
        })
    })
})();